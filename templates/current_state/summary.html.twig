{% extends 'layout.html.twig' %}

{% block container %}
    <div class="container-fluid pt-3">
        <div class="row">
            <div class="col-12">
                <p id="time" data-url="{{ path('current_state') }}"></p>
            </div>
        </div>
        <div class="form-group text-center">
            {% for tag in all_tags %}
                {% set active = tag in active_tags %}
                <div class="custom-control custom-switch custom-control-inline text-center">
                    <input type="checkbox" class="custom-control-input" name="filter[]" value="{{ tag.id }}" id="tag{{ tag.id }}" {% if active %}checked{% endif %}>
                    <label class="custom-control-label" for="tag{{ tag.id }}">{{ tag.name }}</label>
                </div>
            {% endfor %}
        </div>
        <div class="row justify-content-center" id="state">
            {% for datum in data %}
                {% set class = "none" %}
                {% if datum[1] %}
                    {% set class = datum[1].data %}
                {% endif %}
                <div class="card text-center state-{{ class }} state">
                        <p class="card-text m-1">
                            {{ datum[0].lastName }}, {{ datum[0].firstName }}
                        </p>
                </div>
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        var timeDisplay = document.getElementById("time");
        var tags = document.getElementsByName("filter[]");

        function refreshTime() {
            timeDisplay.innerHTML = new Date().toLocaleString();
        }

        setInterval(refreshTime, 1000);
        refreshTime();

        var state = document.getElementById("state");

        function refreshState() {
            function reqListener () {
                var parser = new DOMParser();
                var responseDoc = parser.parseFromString (this.responseText, "text/html");
                state.innerHTML = responseDoc.getElementById("state").innerHTML;
            }

            var selectedTags = '';
            var checkboxes = document.querySelectorAll('input[name="filter[]"]:checked');

            checkboxes.forEach(function(e) {
                if (selectedTags !== '') {
                    selectedTags = selectedTags + ',' + e.value;
                } else {
                    selectedTags = e.value;
                }
            });

            var oReq = new XMLHttpRequest();
            oReq.addEventListener("load", reqListener);
            oReq.open("GET", timeDisplay.getAttribute('data-url') + '/' + selectedTags);
            oReq.send();
        }

        setInterval(refreshState, 5000);
        tags.forEach(function (e) { e.addEventListener('change', refreshState) });
    </script>
{% endblock %}
