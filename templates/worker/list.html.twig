{% extends 'layout.html.twig' %}
{% import 'macros.html.twig' as m %}
{% trans_default_domain 'worker' %}

{% block content %}
    <div class="form-group">
        <h2>
            {{ 'title'|trans }}
            <label for="date-picker"></label><input type="date" id="date-picker" value="{{ date.format('Y-m-d') }}" data-url="{{ path('worker_list_date') }}">
        </h2>
    </div>

    <div class="table-responsive">
        <table class="table table-hover table-striped table-bordered table-sm" id="workers">
            <thead>
                <tr>
                    <th>{{ 'header.name'|trans }}</th>
                    <th>{{ 'header.date'|trans({'%date%': date|date('format.date'|trans({}, 'general'))}) }}</th>
                </tr>
            </thead>
            <tbody>
                {% set old_worker = null %}
                {% set first = true %}
                {% for datum in data %}
                    {% if datum.firstName is defined and datum != old_worker %}
                        {% if old_worker is not null %}
                            {% if first %}<span class="text-muted">{{ 'table.none'|trans }}</span>{% endif %}
                            <a href="{{ path('worker_list_date_detail', {'id': old_worker.id, 'date': date|date('format.date_parameter'|trans({}, 'general')) }) }}"><i class="fas fa-ellipsis-h"></i></a>
                            </td>
                        </tr>
                        {% endif %}
                        {% set old_worker = datum %}
                        {% set url = path('worker_form', {'id': datum.id}) %}
                        {% set first = true %}
                        <tr>
                            <td>
                                <a href="{{ url }}">{{ datum.lastName }}, {{ datum.firstName }}</a>
                                {% for tag in datum.tags %}
                                    <span class="badge badge-info">{{ tag.name }}</span>
                                {% endfor %}
                            </td>
                            <td>
                    {% else %}
                            {% if datum %}
                                <span class="badge badge-{% if datum.outTimestamp %}success{% else %}info{% endif %}">
                                {% set first = false %}
                                {{ datum.inTimestamp|date('format.time'|trans({}, 'general')) -}}
                                {%- if datum.outTimestamp %}-{{ datum.outTimestamp|date('format.time'|trans({}, 'general')) }}{% endif %}
                                </span>
                            {% endif %}
                    {% endif %}
                {% else %}
                    <tr>
                        <td colspan="2">{{ 'table.no_workers'|trans }}</td>
                    </tr>
                {% endfor %}
                {% if old_worker is not null %}
                    {% if first %}<span class="text-muted">{{ 'table.none'|trans }}</span>{% endif %}
                    <a href="{{ path('worker_list_date_detail', {'id': old_worker.id, 'date': date|date('format.date_parameter'|trans({}, 'general')) }) }}"><i class="fas fa-ellipsis-h"></i></a>
                    </td><tr>
                {% endif %}
            </tbody>
        </table>
    </div>

    {{ m.link_button(path('worker_new'), 'plus', 'btn-success', 'button.new'|trans) }}
    {{ m.link_button(path('worker_import'), 'upload', 'btn-primary', 'button.worker_import'|trans) }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        var workers = document.getElementById("workers");
        var datePicker = document.getElementById("date-picker");

        function refreshList(e) {
            function reqListener () {
                var parser = new DOMParser();
                var responseDoc = parser.parseFromString (this.responseText, "text/html");
                workers.innerHTML = responseDoc.getElementById("workers").innerHTML;
            }

            var oReq = new XMLHttpRequest();
            oReq.addEventListener("load", reqListener);
            oReq.open("GET", datePicker.getAttribute('data-url') + '/' + e.target.value);
            oReq.send();
        }

        datePicker.addEventListener('change', refreshList);
    </script>
{% endblock %}
